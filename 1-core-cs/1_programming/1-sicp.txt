-- programmers job
  1. Perfection of part and adequacy of collection.

-- goals of intro CS
  1. A computer language is not just a way of getting a computer to 
  perform operations but rather that it is a novel formal medium for expressing 
  ideas about methodology. 

  2. The techniques used to control the intellectual 
  complexity of large software systems.

------------------------------------------------------------------------------------
1. Building Abstractions with Procedures
------------------------------------------------------------------------------------

Simple functions <= (combination, abstraction) => higher-order functions.

(one abstraction (defining functions) and systematic introduction of examples
of how it's useful and what can be done with it) 

------------------------------------------------------------------------------------
2. Building Abstractions with Data
------------------------------------------------------------------------------------

Simple data <= (combination, abstraction) => compound data

(one abstraction (combining primitive data with 'glue') and systematic introduction of examples
of how it's useful and what can be done with it) 

  * compound data => sequences => generic operations on sequences (filter, map,
    etc) => generic operations that can handle many different types of data.

-- closure
  A programming technique that allows variables outside of the 
  scope of a function to be accessed. Usually, a closure is created when a 
  function is defined in another function, allowing the inner function to access
  variables in the outer one

-- stratified design
  the notion that a complex system should be structured as a sequence
  of levels that are described using a sequence of languages. Each level is
  constructed by combining parts that are regarded as primitive at that
  level, and the parts constructed at each level are used as primitives at
  the next level. The language used at each level of a stratified design has
  primitives, means of combination, and means of abstraction appropriate
  to that level of detail.

-- massage passing 
  work with 'intelligent procedures' vs work with 'intelligent objects'

  refers to the sending of a message to a process which can be an object, 
  etc. This message can be used to invoke another process, directly or indirectly.
        
------------------------------------------------------------------------------------
3. Modularity, Objects and State
------------------------------------------------------------------------------------

Organizational principles that guide us in formulating the overall design of a program

  a. Object-based approach
      We model state with local state variables, and we model the changes of state with assignments to those variables

      -- concurrency
      One of the mechanisms to control concurrency is serialization, which 
      creates distinguished sets of procedures such that only one execution of a 
      procedure in each serialized set is permitted to happen at a time.

      -- deadlock
      Each process is stalled forever, waiting for the other.

  b. Stream-processing approach 
      Lets us model systems that have state without ever using assignment or 
      mutable data and avoid computational inefficiencies of lists. The basic 
      idea is to arrange to construct a stream only partially, and to pass the 
      partial construction to the program that consumes the stream. If the 
      consumer attempts to access a part of the stream that has not yet been 
      constructed, the stream will automatically construct just enough more of 
      itself to produce the required part.

      - delayed evaluation


Misc resources:
1. https://www.lesswrong.com/posts/GAqCiWJBttazYGsJR/review-structure-and-interpretation-of-computer-programs 



